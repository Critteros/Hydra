# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Permission {
  """Unique identifier and name of the permission"""
  id: ID!

  """Description of the permission"""
  description: String!
}

type User {
  """Unique identifier of the user"""
  uid: ID!

  """Email address of the user"""
  email: String!

  """Nickname for the user"""
  name: String

  """Type of the user account"""
  accountType: AccountType!

  """List of permissions assigned to the user"""
  permissions: [Permission!]!

  """Assigned permissions"""
  permissionSet: [String!]!
}

"""Type of the user account"""
enum AccountType {
  STANDARD
  ADMIN
}

type AssignedPermission {
  """Unique identifier and name of the permission"""
  id: ID!

  """Description of the permission"""
  description: String!

  """User who assigned specific permission"""
  assignedBy: User

  """Date when permission was assigned"""
  assignedAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Role {
  """Role unique identifier"""
  uid: ID!

  """Role name"""
  name: String!

  """Role description"""
  description: String!

  """Members of a given role"""
  members: [User!]!

  """Number of members of a given role"""
  memberCount: Int!

  """Role permissions"""
  permissions: [AssignedPermission!]!

  """Number of permissions assigned to a given role"""
  permissionsCount: Int!
}

"""Presentation configuration for a computer"""
type ComputerViewOptions {
  """Whether to show the computer in the list"""
  id: ID!

  """Whether to show the computer in the list"""
  order: Float!
}

"""Represent a computer which participates in the network boot process"""
type Computer {
  """Unique identifier of the computer"""
  uid: ID!

  """Name of the computer set by the user"""
  name: String!

  """MAC address of the computer"""
  mac: String!

  """IP address of the computer"""
  ipv4: String!

  """Presentation configuration for a computer"""
  viewOptions: ComputerViewOptions
}

"""Presentation configuration for a computer group"""
type ComputerGroupViewOptions {
  """Whether to show the computer group in the list"""
  id: ID!

  """Whether to show the computer group in the list"""
  order: Float!
}

"""Represent a grouping of computers"""
type ComputerGroup {
  """Unique identifier of the computer group"""
  uid: ID!

  """Name of the computer group"""
  name: String!

  """Description of the computer group"""
  computers: [Computer!]!

  """Presentation configuration for a computer group"""
  viewOptions: ComputerGroupViewOptions
}

type Query {
  users: [User!]!
  user(
    """Unique identifier of the user to update"""
    uid: ID

    """Email of the user to update"""
    email: String
  ): User

  """Returns the current user"""
  me: User!

  """Get all permissions"""
  permissions: [Permission!]!

  """Get all roles"""
  roles: [Role!]!

  """Get a single role"""
  role(
    """Role unique identifier"""
    uid: ID

    """Role name"""
    name: String
  ): Role

  """Get all computers"""
  computers(
    """If teu then only the computers without a group assigement are returned"""
    standalone: Boolean
  ): [Computer!]!

  """Get a single computer"""
  computer(where: WhereUniqueComputerInput!): Computer

  """Get all computer groups"""
  computerGroups: [ComputerGroup!]!

  """Get a single computer group"""
  computerGroup(where: WhereUniqueComputerGroupInput!): ComputerGroup
}

input WhereUniqueComputerInput {
  uid: String
  name: String
  mac: String
  ipv4: String
}

input WhereUniqueComputerGroupInput {
  """Unique ID of the computer group"""
  uid: String

  """Name of the computer group"""
  name: String
}

type Mutation {
  """Updates user data"""
  updateUser(
    """Unique identifier of the user to update"""
    uid: ID

    """Email of the user to update"""
    email: String
    updateData: UpdateUserInput!
  ): User!

  """Updates current user password"""
  updateCurrentUserPassword(
    """Current password"""
    currentPassword: String!

    """New password"""
    newPassword: String!
  ): Boolean!

  """Admin updates user password"""
  adminUpdateUserPassword(
    """Unique identifier of the user to update"""
    uid: ID

    """Email of the user to update"""
    email: String

    """New password"""
    password: String!
  ): Boolean!

  """Creates a new user"""
  createUser(data: CreateUserInput!): User!

  """Delete multiple users"""
  deleteMultipleUsers(uids: [ID!]!): Boolean!

  """Create a new role"""
  createRole(data: CreateRoleInput!): Role!

  """Delete a role"""
  deleteRole(
    """Role unique identifier"""
    uid: ID

    """Role name"""
    name: String
  ): Boolean!

  """Delete many roles"""
  deleteMultipleRoles(uids: [String!]!): Int!

  """Assign permissions to a role"""
  assignPermissionsToRole(
    """Role unique identifier"""
    uid: ID

    """Role name"""
    name: String
    permissionIds: [String!]!
  ): Boolean!

  """Assign users to a role"""
  assignUsersToRole(
    """Role unique identifier"""
    uid: ID

    """Role name"""
    name: String
    userUids: [String!]!
  ): Boolean!

  """Login as a user"""
  adminLoginAsUser(uid: String!): Boolean!

  """Create a new computer"""
  createComputer(data: ComputerCreateInput!): Computer!

  """Delete a computer"""
  deleteComputers(where: [WhereUniqueComputerInput!]!): Int!

  """Change the view options of a computer"""
  changeComputerViewOptions(where: WhereUniqueComputerInput!, data: ComputerViewOptionsUpdateInput!): ComputerViewOptions!

  """Create a new computer group"""
  createComputerGroup(data: ComputerGroupCreateInput!): ComputerGroup!

  """Change the view options of a computer group"""
  changeComputerGroupViewOptions(where: WhereUniqueComputerGroupInput!, data: ComputerGroupViewOptionsUpdateInput!): ComputerGroupViewOptions!

  """Add computers to a computer group"""
  addComputersToGroup(where: WhereUniqueComputerGroupInput!, computers: [WhereUniqueComputerInput!]!): ComputerGroup!

  """Remove computers from a computer group"""
  removeComputersFromGroup(where: WhereUniqueComputerGroupInput!, computers: [WhereUniqueComputerInput!]!): ComputerGroup!

  """Move computers between groups"""
  moveComputers(fromGroup: WhereUniqueComputerGroupInput!, toGroup: WhereUniqueComputerGroupInput!, computers: [WhereUniqueComputerInput!]!): [Computer!]!

  """Delete a computer group"""
  deleteComputerGroups(where: [WhereUniqueComputerGroupInput!]!): Int!
}

input UpdateUserInput {
  """New email address of the user"""
  email: String

  """Nickname for the user"""
  name: String

  """Type of the user account"""
  accountType: AccountType
}

input CreateUserInput {
  """New email address of the user"""
  email: String

  """Password for the user"""
  password: String!

  """Nickname for the user"""
  name: String

  """Type of the user account"""
  accountType: AccountType! = STANDARD
}

input CreateRoleInput {
  """Role name"""
  name: String!

  """Role description"""
  description: String!
}

input ComputerCreateInput {
  """Name of the computer"""
  name: String!

  """MAC address of the computer"""
  mac: String!

  """IP address of the computer"""
  ipv4: String!

  """Presentation configuration for a computer"""
  viewOptions: ComputerViewOptionsCreateInput
}

input ComputerViewOptionsCreateInput {
  """Order of the computer in the list"""
  order: Float!
}

input ComputerViewOptionsUpdateInput {
  """Order of the computer in the list"""
  order: Float!
}

input ComputerGroupCreateInput {
  """Name of the computer group"""
  name: String!

  """Presentation configuration for a computer group"""
  viewOptions: ComputerGroupViewOptionsCreateInput

  """Computers to add to the group"""
  computers: [WhereUniqueComputerInput!]
}

input ComputerGroupViewOptionsCreateInput {
  """Order of the computer group in the list"""
  order: Float!
}

input ComputerGroupViewOptionsUpdateInput {
  """Order of the computer group in the list"""
  order: Float!
}